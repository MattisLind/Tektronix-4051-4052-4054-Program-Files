input file: input file is tape file #5output file: output file is tape file #6PASS 1***EOF***PASS 20000:                         ;       6.0 MINIBUG REV.4 PROGRAM - Modified for Tektronix 4052A/4054A 0000:                         ;   Modified from pdf source by Monty McGraw - Oct 6 20180000:                         ;0000:                         ;     from LISTING in MikbugEN100.pdf at0000:                         ;     http://www.swtpc.com/mholley/MP_A/MIKBUG_Index.htm0000:                         ;       NAM MINIB0000:                         ;       MINI-BUG0000:                         ;       COPYWRITE 1973, MOTOROLA IMC0000:                         ;       REV 004 (USED WITH MIKBUG)0000:                         ;0000:                         ;   location of Motorola ACIA hardware in Tektronix 4052/40540000:  FF44                   ACIACS= 0FF44   ;ACIA CONTROL/STATUS (FF44)0000:  FF45                   ACIADA= 0FF45   ;                                        (FF45)0000:                         ;0000:                         ;   Reworked source for Tektronix 4052A or 4054A to be loaded0000:                         ;   with CALL "EXEC",Code$,Rel$ where first E in EXEC is Control-E0000:                         ;       and Code$ is 8-bit binary and Rel$ contains CHR(20)&CHR(0)0000:                         ;0000:                         ;       The BINARY program must be loaded at 2000 or reassemble with new ORG0000:                         ;   I used A09 assembler V1.37 with these directives:0000:                         ;   a09.exe -Bmini.bin -Fmini.f -Smini.srec -Lmini.lst -OM00 mini.src0000:                         ;  0000:                         ;               ORG             $20000000:  7E 00D9R               BEGIN:  JMP     START   ; JUMP TO START CODE0003:                         0003:                         ; INPUT ONE CHAR INTO A-REGISTER0003:  B6 FF44                INCH:   LDAA    ACIACS0006:  47                                     ASRA0007:  24 FA                                  BCC             INCH    ; RECEIVE NOT READY0009:  B6 FF45                                LDAA    ACIADA  ; INPUT CHARACTER000C:  84 7F                                  ANDA    7F,i    ; RESET PARITY BIT000E:  81 7F                                  CMPA    7F,i0010:  27 F1                                  BEQ             INCH    ; RUBOUT - IGNORE0012:  7E 00B1R                               JMP     OUTCH   ; ECHO CHAR0015:                         0015:                         ; INPUT HEX CHAR0015:  8D EC                  INHEX:  BSR     INCH0017:  81 30                                  CMPA    30,i0019:  2B 52                                  BMI             C1              ; NOT HEX001B:  81 39                                  CMPA    39,i001D:  2F 0A                                  BLE             IN1HG001F:  81 41                                  CMPA    41,i0021:  2B 4A                                  BMI             C1              ; NOT HEX0023:  81 46                                  CMPA    46,i0025:  2E 46                                  BGT     C1              ; NOT HEX0027:  80 07                                  SUBA    07,i0029:  39                     IN1HG:  RTS002A:  86 D1                  LOAD:   LDAA    0D1,i   ; TURN READER ON002C:                                         ;STA A  ACIACS  ; DON'T CHANGE THE CS REG002C:  01                                     NOP                             ; REPLACE WITH THREE NOPs002D:  01                                     NOP002E:  01                                     NOP002F:  86 00                                  LDAA    00,i      ; use NULL instead0031:  8D 7E                                  BSR             OUTCH0033:  8D CE                  LOAD3:  BSR     INCH0035:  81 53                                  CMPA    53,i0037:  26 FA                                  BNE     LOAD3   ; 1ST CHAR NOT (S)0039:  8D C8                                  BSR     INCH    ; READ CHAR003B:  81 39                                  CMPA    39,i003D:  27 25                                  BEQ     LOAD21003F:  81 31                                  CMPA    31,i0041:  26 F0                                  BNE             LOAD3   ; 2ND CHAR NOT (1)0043:  7F 013BR                               CLR             CKSM    ; ZERO CHECKSUM0046:  8D 36                                  BSR             BYTE    ; READ BYTE0048:  80 02                                  SUBA    02,i004A:  B7 013CR                               STAA    BYTECT  ; BYTE COUNT004D:                         004D:                         ; BUILD ADDRESS004D:  8D 21                                  BSR             BADDR004F:  8D 2D                  LOAD11: BSR             BYTE0051:  7A 013CR                               DEC             BYTECT0054:  27 05                                  BEQ             LOAD15  ; ZERO BYTE COUNT0056:  A7 00                                  STAA 0,x0058:  08                                     INX0059:  20 F4                                  BRA             LOAD11005B:  7C 013BR               LOAD15: INC             CKSM005E:  27 D3                                  BEQ             LOAD30060:  86 3F                  LOAD19: LDAA    3F,i    ; PRINT QUESTION MARK0062:  8D 4D                                  BSR             OUTCH0064:  86 B1                  LOAD21: LDAA    0B1,i   ; TURN READER OFF0066:                                    ;STAA        ACIACS  ; DON'T CHANGE THE CS REG0066:  01                                 NOP                         ; REPLACE WITH NOPs0067:  01                                 NOP0068:  01                                 NOP0069:  86 00                              LDAA        00,i    ; use NULL instead006B:  8D 44                              BSR         OUTCH006D:  7E 00DFR               C1:     JMP             CONTRL0070:                         0070:                         ; BUILD ADDRESS0070:  8D 0C                  BADDR:  BSR             BYTE    ; READ 2 FRAMES0072:  B7 013DR                               STAA    XHI0075:  8D 07                                  BSR             BYTE0077:  B7 013ER                               STAA    XLOW007A:  FE 013DR                               LDX             XHI             ; (X) ADDRESS WE BUILT007D:  39                                     RTS007E:                         007E:                         ; INPUT BYTE (TWO FRAMES)007E:  8D 95                  BYTE:   BSR             INHEX   ; GET HEX CHAR0080:  48                                     ASLA0081:  48                                     ASLA0082:  48                                     ASLA0083:  48                                     ASLA0084:  16                                     TAB0085:  8D 8E                                  BSR             INHEX0087:  84 0F                                  ANDA    0F,i    ; MASK TO 4 BITS0089:  1B                                     ABA008A:  16                                     TAB008B:  FB 013BR                               ADDB    CKSM008E:  F7 013BR                               STAB    CKSM0091:  39                                     RTS0092:                         0092:                         ;CHANGE MEMORY (M AAAA DD NN)0092:  8D DC                  CHANGE: BSR             BADDR   ; BUILD ADDRESS0094:  8D 34                                  BSR             OUTS    ; PRINT SPACE0096:  8D 30                                  BSR             OUT2HS0098:  8D E4                                  BSR             BYTE009A:  09                                     DEX009B:  A7 00                                  STAA 0,x009D:  A1 00                                  CMPA 0,x009F:  26 BF                                  BNE     LOAD19  ; MEMORY DID NOT CHANGE00A1:  20 3C                                  BRA             CONTRL00A3:  44                     OUTHL:  LSRA                    ; OUT HEX LEFT BCD DIGIT00A4:  44                                     LSRA00A5:  44                                     LSRA00A6:  44                                     LSRA00A7:  84 0F                  OUTHR:  ANDA    0F,i    ; OUT HEX RIGHT BCD DIGIT00A9:  8B 30                                  ADDA    30,i00AB:  81 39                                  CMPA    39,i00AD:  23 02                                  BLS             OUTCH00AF:  8B 07                                  ADDA    07,i00B1:                                         00B1:                         ; OUTPUT ONE CHAR00B1:  37                     OUTCH:  PSHB                    ; SAVE B-REG00B2:  F6 FF44                OUTC1:  LDAB    ACIACS00B5:  57                                     ASRB00B6:  57                                     ASRB00B7:  24 F9                                  BCC             OUTC1   ; XMIT NOT READY00B9:  B7 FF45                                STAA    ACIADA  ; OUTPUT CHARACTER00BC:  33                                     PULB                    ; RESTORE B-REG00BD:  39                                     RTS00BE:                         00BE:  A6 00                  OUT2H:  LDAA 0,x        ; OUTPUT 2 HEX CHAR00C0:  8D E1                                  BSR             OUTHL   ; OUT LEFT HEX CHAR00C2:  A6 00                                  LDAA 0,x00C4:  8D E1                                  BSR             OUTHR   ; OUT RIGHT HEX CHAR00C6:  08                                     INX00C7:  39                                     RTS00C8:  8D F4                  OUT2HS: BSR             OUT2H   ; OUTPUT 2 HEX CHAR + SPACE00CA:  86 20                  OUTS:   LDAA    20,i    ; SPACE00CC:  20 E3                                  BRA             OUTCH   ; (BSR & RTS)00CE:                         00CE:                         ; PRINT CONTENTS OF STACK.00CE:  30                     PRINT:  TSX00CF:  FF 0139R                               STX             SP              ; SAVE STACK POINTER00D2:  C6 09                                  LDAB    09,i00D4:  8D F2                  PRINT2: BSR             OUT2HS  ; OUT 2 HEX & SPACE00D6:  5A                                     DECB00D7:  26 FB                                  BNE PRINT200D9:                         00D9:                         ; ENTER POWER ON SEQUENCE00D9:                         ; INZ ACIA00D9:  B6 00B1                START:  LDAA    0B1         ; DON'T CHANGE UART PARAMETERS00DC:                         ;               STAA    ACIACS  ; REPLACE WITH THREE NOPs00DC:  01                                     NOP                             ; REPLACE WITH THREE NOPs00DD:  01                                     NOP00DE:  01                                     NOP00DF:  BE 0131R               CONTRL: LDS             STACK   ; SET STACK POINTER00E2:  86 0D                                  LDAA    0D,i    ; CARRIAGE RETURN00E4:  8D CB                                  BSR             OUTCH00E6:  86 3E                                  LDAA    3E,i    ; ADD > FOR PROMPT insead of LF00E8:  8D C7                                  BSR             OUTCH00EA:  BD 0003R                               JSR             INCH    ; READ CHARACTER00ED:  16                                     TAB00EE:  8D DA                                  BSR             OUTS    ; PRINT SPACE00F0:  C1 4C                                  CMPB    4C,i00F2:  26 03                                  BNE             TSTCNG00F4:  7E 002AR                               JMP             LOAD00F7:  C1 4D                  TSTCNG: CMPB    4D,i00F9:  27 97                                  BEQ             CHANGE00FB:  C1 50                                  CMPB    50,i00FD:  27 CF                                  BEQ             PRINT   ; STACK00FF:  C1 51                                  CMPB    51,i    ; ADD Q TO RETURN TO BASIC0101:  27 05                                  BEQ             RETURN  ; to basic pgm after CALL EXEC0103:  C1 47                                  CMPB    47,i0105:  26 D8                                  BNE             CONTRL0107:  3B                                     RTI                     ; GO0108:  39                     RETURN: RTS0109:                         ;0109:                         ; put NOPs AND LABELS TO MAKE STACK AT END OF PROGRAM INSTEAD OF ABSOLUT0109:                         ; RESERVE 40 (DECIMAL) BYTES BEFORE STACK0109:  01                                     NOP010A:  01                                     NOP010B:  01                                     NOP010C:  01                                     NOP010D:  01                                     NOP010E:  01                                     NOP010F:  01                                     NOP0110:  01                                     NOP0111:  01                                     NOP0112:  01                                     NOP0113:  01                                     NOP0114:  01                                     NOP0115:  01                                     NOP0116:  01                                     NOP0117:  01                                     NOP0118:  01                                     NOP0119:  01                                     NOP011A:  01                                     NOP011B:  01                                     NOP011C:  01                                     NOP011D:  01                                     NOP011E:  01                                     NOP011F:  01                                     NOP0120:  01                                     NOP0121:  01                                     NOP0122:  01                                     NOP0123:  01                                     NOP0124:  01                                     NOP0125:  01                                     NOP0126:  01                                     NOP0127:  01                                     NOP0128:  01                                     NOP0129:  01                                     NOP012A:  01                                     NOP012B:  01                                     NOP012C:  01                                     NOP012D:  01                                     NOP012E:  01                                     NOP012F:  01                                     NOP0130:  01                                     NOP0131:  01                     STACK:  NOP ; STACK POINTER0132:                         ; REGISTERS FOR GO0132:  01                                     NOP     ; CONDITION CODES0133:  01                                     NOP     ; B ACCUMULATOR0134:  01                                     NOP     ; A0135:  01                                     NOP     ; X-HIGH0136:  01                                     NOP     ; X-LOW0137:  01                                     NOP     ; P-HIGH0138:  01                                     NOP     ; P-LOW0139:  01                     SP:             NOP ; S-HIGH013A:  01                                     NOP     ; S-LOW013B:                         ; END REGISTERS FOR GO013B:  01                     CKSM:   NOP     ; CHECKSUM013C:  01                     BYTECT: NOP ; BYTE COUNT013D:  01                     XHI:    NOP     ; X-HIGH013E:  01                     XLOW:   NOP     ; X-LOW;***EOF***symbols---ACIACS=  FF44	ACIADA=  FF45	BEGIN:  0000	INCH:  0003	INHEX:  0015	IN1HG:  0029	LOAD:  002A	LOAD3:  0033	LOAD11:  004F	LOAD15:  005B	LOAD19:  0060	LOAD21:  0064	C1:  006D	BADDR:  0070	BYTE:  007E	CHANGE:  0092	OUTHL:  00A3	OUTHR:  00A7	OUTCH:  00B1	OUTC1:  00B2	OUT2H:  00BE	OUT2HS:  00C8	OUTS:  00CA	PRINT:  00CE	PRINT2:  00D4	START:  00D9	CONTRL:  00DF	TSTCNG:  00F7	RETURN:  0108	STACK:  0131	SP:  0139	CKSM:  013B	BYTECT:  013C	XHI:  013D	XLOW:  013E	error count: 0writing code to tape file #6LEN(REL)$= 34      LEN(CODE$)= 319REL$ IN HEX FOLLOWS000000000100400400500500600700700700800800D000E000E00FCODE$ IN HEX FOLLOWS__7E 00 D9 B6 FF 44 47 24 FA B6 FF 45 84 7F 81 7F 27 F1 7E 00 B1 8D EC 81 30 2B 52 81 39 2F 0A 81 41 2B 4A 81 46 2E 46 80 07 39 86 D1 01 01 01 86 00 8D 7E 8D CE 81 53 26 FA 8D C8 81 39 27 25 81 31 26 F0 7F 01 3B 8D 36 80 02 B7 01 3C 8D 21 8D 2D 7A 01 3C 27 05 A7 00 08 20 F4 7C 01 3B 27 D3 86 3F 8D 4D 86 B1 01 01 01 86 00 8D 44 7E 00 DF 8D 0C B7 01 3D 8D 07 B7 01 3E FE 01 3D 39 8D 95 48 48 48 48 16 8D 8E 84 0F 1B 16 FB 01 3B F7 01 3B 39 8D DC 8D 34 8D 30 8D E4 09 A7 00 A1 00 26 BF 20 3C 44 44 44 44 84 0F 8B 30 81 39 23 02 8B 07 37 F6 FF 44 57 57 24 F9 B7 FF 45 33 39 A6 00 8D E1 A6 00 8D E1 08 39 8D F4 86 20 20 E3 30 FF 01 39 C6 09 8D F2 5A 26 FB B6 00 B1 01 01 01 BE 01 31 86 0D 8D CB 86 3E 8D C7 BD 00 03 16 8D DA C1 4C 26 03 7E 00 2A C1 4D 27 97 C1 50 27 CF C1 51 27 05 C1 47 26 D8 3B 39 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01