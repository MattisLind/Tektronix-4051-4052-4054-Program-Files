 1      ASCII   PROGRAM   SECRET   12     TUT TUT TUT -- THIS IS A SECRET FILE                                                                                                                                                                            2      ASCII   PROGRAM   SECRET   10     TUT TUT TUT -- THIS IS A SECRET FILE                                                                                                                                                                            3      ASCII   PROGRAM   SECRET   29     TUT TUT TUT -- THIS IS A SECRET FILE                                                                                                                                                                            4      ASCII   PROGRAM   SECRET   26     TUT TUT TUT -- THIS IS A SECRET FILE                                                                                                                                                                            5      ASCII   PROG /DUPL ASCI/   18                                                                                                                                                                                                                         1000 REM *1010 REM *  TAPE DUPLICATOR (ASCII)1020 REM *       DAN TAYLOR, GS SOFT. ENGR., JUNE 19761030 REM *1040 PRINT "	** TAPE DUPLICATOR (ASCII) **"1050 INIT 1060 DATA 500,10001070 READ A2,A51080 PRINT "INSERT MASTER AND LEAVE IT IN UNTIL TOLD TO DO OTHERWISE."1090 PRINT "BEGIN WITH FILE # ";1100 INPUT J21110 PRINT "  END WITH FILE # ";1120 INPUT J31130 A2=A2 MAX 1001140 DIM B$(1),C$(1),E$(A2),H$(8),A1((J3-J2 MAX 0)+2)1150 A3=MEMORY-2001160 DIM A$(A3)1170 A5=A5 MAX 01180 PRINT "DO YOU WANT THE FILES ""MARK""'ED AUTOMATICALLY: ";1190 INPUT C$1200 J0=01210 IF C$="Y" THEN 12401220 IF C$<>"N" THEN 11801230 J0=11240 PRINT ""1250 C$=CHR(13)1260 H$=C$&C$1270 H$=H$&H$1280 H$=H$&"DANT"1290 A$=""1300 DATA 0,0,11310 READ A0,W0,W11320 A4=A3-2201330 FOR J1=J2 TO J31340 PRINT "	READING FILE # ";J11350 FIND J11360 ON EOF (0) THEN 14501370 INPUT @33:E$1380 IF LEN(A$)>A4 THEN 15301390 E$=E$&C$1400 A$=REP(E$,W1+LEN(A$),W0)1410 GO TO 13701420 REM  *1430 REM  *                 ALL OF FILE J1 HAS BEEN READ INTO A$1440 REM  *1450 A$=REP(H$,W1+LEN(A$),W0)1460 A0=A0+W11470 REM *1480 REM *                 YOU MIGHT WANT TO CHANGE THE NEXT LINE TO:1490 REM *                 INPUT A1(A0)     OR MAYBE    A1(A0)=J1+31500 REM *1510 A1(A0)=J11520 GO TO 16501530 IF A0>W0 THEN 15601540 PRINT "FILE # ";J1;" IS TOO LONG TO BE READ IN."1550 END 1560 PRINT "	NOT ENOUGH ROOM FOR FILE # ";J11570 PRINT "	IT WILL BE TRANSFERRED IN THE NEXT BATCH."1580 J1=J1-W11590 GOSUB 17301600 A0=W01610 A$=""1620 PRINT " RE-INSERT THE MASTER AND PRESS RETURN. ";1630 INPUT B$1640 PRINT ""1650 NEXT J11660 IF A$="" THEN 16801670 GOSUB 17301680 PRINT "	ALL FILES TRANSFERRED."1690 END 1700 REM  *1710 REM  *         STORE ONTO DUPLICATE TAPE(S)1720 REM  *1730 PRINT "READY TO TRANSFER FILES # ";A1(W1);" TO # ";A1(A0)1740 J6=W11750 PRINT "TYPE ""LAST"" AFTER THE LAST COPY HAS BEEN MADE."1760 PRINT "INSERT A DUPLICATE TAPE AND PRESS ""RETURN"" ";1770 IF J6 THEN 17901780 PRINT "OR TYPE ""LAST"".  ";1790 INPUT B$1800 PRINT ""1810 IF B$="L" THEN 21301820 IF B$<>"" THEN 17601830 J6=W11840 FOR J5=W1 TO A01850 J7=POS(A$,H$,J6)1860 J8=J61870 PRINT USING "16A,3D,S":"	STORING FILE # ";A1(J5);1880 PRINT USING "8D,"" CHARACTERS"",S":J7-J61890 IF J0 THEN 19801900 IF A1(J5)>W1 THEN 19301910 FIND W01920 MARK W1,W11930 J9=INT(J7-J6)+A51940 FIND A1(J5)1950 PRINT "   MARK 1,";J9;1960 MARK W1,J91970 GO TO 19801980 PRINT 1990 FIND A1(J5)2000 IF J7-A2<J6 THEN 20502010 FOR J8=J6 TO J7-A2 STEP A22020 E$=SEG(A$,J8,A2)2030 PRINT @33:E$;2040 NEXT J82050 IF J8=J7 THEN 20802060 E$=SEG(A$,J8,J7-J8)2070 PRINT @33:E$;2080 J6=J7+LEN(H$)2090 CLOSE 2100 NEXT J52110 J6=W02120 GO TO 17602130 RETURN A2<J6 THEN 22150 J6=W02160 GO TO 18002170 RETURN INT USING "8D,"" CHARACTERS"",S":J7-J61930 IF J0 THEN 20201940 IF A1(J5)>W1 THEN 19701950 FIND W01960 MARK W1,W11970 J9=INT(J7-J6)+A51980 FIND A1(J5)1990 PRINT "   MARK 1,";J9;2000 MARK W1,J92010 GO TO 20 5      NEW                       18                                                                                                                                                                                                                           5      NEW                       18                                                                                                                                                                                                                           5      NEW                       18                                                                                                                                                                                                                           5      NEW                       18                                                                                                                                                                                                                           5      NEW                       18                                                                                                                                                                                                                           6      ASCII   PROG /  "  GEN./   33     ";3430 PRINT "UAL)"3440 GO TO 3290TOO SMALL."3380 GO TO 32903390 IF K9<>10 THEN 34203400 PRINT "FATAL ERROR:  VERIFY (READ AFTER WRITE) ERROR"3410 GO TO 32903420 PRI "FATAL ERROR1000 REM                     7-26-76     4924 TAPE DUPLICATOR1010 PRINT "	** TAPE DUPLICATOR (4924) **"1020 INIT 1030 PRINT @37,0:13,255,2551040 DATA 0,0,01050 DATA 0,0,01060 READ K1,K2,K3,K4,K5,K61070 DIM B$(1),C$(1),D$(45)1080 C$=CHR(13)1090 PRINT "DO YOU WANT THE WHOLE TAPE DUPLICATED: ";1100 INPUT B$1110 DATA 1,255,0,0,0,0,11120 READ J2,J3,J4,J5,J6,J7,J01130 IF B$="Y" THEN 13001140 IF B$<>"N" THEN 10901150 J4=11160 PRINT "	BEGIN WITH FILE # ";1170 INPUT J21180 J2=INT(J2)1190 PRINT "	  END WITH FILE # ";1200 INPUT J31210 J3=INT(J3) MIN 2551220 IF J3<J2 OR J2<1 THEN 11601230 PRINT "	YOU MAY TRANSFER MASTER FILES # ";J2;" TO ";J31240 PRINT "	INTO DIFFERENT FILES ON THE DUPLICATE(S)."1250 PRINT "	TRANSFER # ";J2;" FROM THE MASTER TO # ";1260 INPUT J11270 IF J1<1 OR J1>260 THEN 12501280 J5=INT(J1)-J21290 REM1300 DIM A1(J3-J2+1)1310 A1=01320 PRINT "DO YOU WANT THE DUPLICATE(S) VERIFIED: ";1330 INPUT B$1340 IF B$="Y" THEN 13701350 IF B$<>"N" THEN 13201360 J7=11370 K7=NOT(J7)1380 PRINT "DO YOU WANT THE FILES ""MARK""'ED AUTOMATICALLY: ";1390 INPUT B$1400 IF B$="N" THEN 16001410 IF B$<>"Y" THEN 13801420 IF K3 THEN 15301430 PRINT "	YOU MAY CHOOSE TO:"1440 PRINT "	  1. HAVE THEM ""MARK""'ED THE SAME AS THE MASTER."1450 PRINT "	  2. OR HAVE THEM ""MARK""'ED JUST ""LARGE ENOUGH""."1460 PRINT "	      (PLUS SOME FREE SPACE)"1470 PRINT "	  ENTER YOUR CHOICE = ";1480 INPUT J11490 IF J1<>INT(J1) OR J1<1 OR J1>2 THEN 14701500 A5=01510 J0=01520 IF J1=1 THEN 16001530 J0=0.251540 PRINT "	WHEN ""MARK""'ING, HOW MANY BYTES OF	FREE SPACE DO YOU";1550 PRINT " WANT ADDED TO	ALLOW ROOM FOR EXPANSION (EG 1000) = ";1560 INPUT A51570 A5=INT(A5)1580 IF A5<0 THEN 15401590 REM1600 PRI "PUT YOUR MASTER TAPE IN THE 4051 AND THE DUPLICATE IN THE ";1610 PRINT "4924.    (MAKE SURE THE MASTER IS ON SAFE AND THE";1620 PRINT " DUPLICATE IS NOT.)"1630 PRINT "ENTER THE GPIB (IEC) DEVICE # FOR THE 4924 = ";1640 INPUT J91650 J9=INT(J9)1660 IF J9<1 OR J9>30 THEN 16301670 J8=331680 K1=NOT(NOT(K1))1690 K4=NOT(NOT(K4))1700 A3=MEMORY-2001710 DIM A$(A3)1720 ON SRQ THEN 33301730 REM                                 PREPARE FOR NEXT DUPLICATION1740 PRINT @J8,0:K1,K2,K31750 PRINT @J9,0:K4,K5,K6,K71760 IF J2+J5<>1 OR J0 THEN 17901770 FIND @J9:01780 MARK @J9:1,11790 A0=01800 FIND @J9:J2+J51810 PRINT "	BEGIN DUPLICATION"1820 PRINT " MASTER    DUPLICATE      SIZE          FILE"1830 PRINT " FILE #     FILE #       MARKED         TYPE"1840 FOR J1=J2 TO J31845 E1=01850 A0=A0+11860 A6=J1+J51870 PRINT USING "L,5D,11D,S":J1,A61880 IF J0 THEN 23301890 IF J6 THEN 22901900 REM               FIND A1(A0), FOR MARKING -- CHECK FOR LAST FILE1910 IF K3 THEN 20501920 PRINT @J8,0:K1,K2,11930 FIND @J8:J11940 PRINT @J8,0:K1,K2,01950 INPUT %J8:D$1960 IF LEN(D$)<>42 THEN 29401970 IF POS(D$,"L",9)=9 THEN 25501980 IF POS(D$,"B",9)=9 AND POS(D$,"P",17)=17 AND J0=0.25 THEN 20451990 IF J0<>0 AND POS(D$,"N",9)<>9 AND POS(D$,"S",27)<>27 THEN 20502000 REM         MARK SAME SIZE2010 A$=SEG(D$,32,10)2020 A1(A0)=(2-K1)*128*VAL(A$)2030 GO TO 22902040 REM         MARK TO TRIM EXCESS2045 E1=12050 FIND @J8:J12060 K0=02070 K8=02080 K9=02090 A4=TYP(0)2100 ON EOF (0) THEN 22402110 GO TO A4+1 OF 2240,2240,2120,2170,22002120 INPUT %J8:A$2130 K0=K0+12140 K9=K9+LEN(A$)2150 GO TO 21202160 IF TYP(0)=4 THEN 22002165 IF E1 THEN 22342170 READ @J8:A22180 K8=K8+12190 GO TO 21602200 READ @J8:A$2210 K0=K0+12220 K9=K9+LEN(A$)2230 GO TO 21602234 A4=(K0+1)*(2-K1)*128+A52236 GO TO 22502240 A4=K9+K0+A5+(A4<>2)*(10*K8+K0)2250 A1(A0)=A4 MAX 12260 A4=(2-K1)*1282270 A1(A0)=(-INT(-A1(A0)/A4) MAX 3)*A42280 REM         MARK DUPLICATE2290 FIND @J9:A62300 MARK @J9:1,A1(A0)2310 GO TO 24302320 REM         DUPLICATE PRE-MARKED--FIND ITS SIZE2330 IF K6 THEN 24302340 FIND @J9:A62350 INPUT @J9,9:D$2360 IF LEN(D$)<>42 THEN 29402370 A$=SEG(D$,32,10)2380 A1(A0)=(2-K4)*128*VAL(A$)2390 IF POS(D$,"L",9)=9 THEN 25602400 IF POS(D$,"N",9)=9 THEN 24302410 KILL @J9:A62420 REM                                 CHECK MASTER HEADER FOR ABNL2430 ON EOF (0) THEN 30902440 PRINT USING "C15D,9X,S":A1(A0)2450 K9=122460 IF K3 THEN 28502470 IF NOT(J0) AND NOT(J6) THEN 25302480 PRINT @J8,0:K1,K2,12490 FIND @J8:J12500 PRINT @J8,0:K1,K2,02510 INPUT %J8:D$2520 IF LEN(D$)<>42 THEN 29402530 B$=SEG(D$,9,1)2540 GO TO POS("ABNL",B$,1)+1 OF 2940,2640,2640,3160,25502550 IF J0 THEN 25802560 PRINT "            ";(2-K4)*128*3;"         LAST"2570 GO TO 25902580 PRINT "LAST MASTER FILE"2590 A4=J12600 J1=J32610 J3=A4-12620 GO TO 31702630 REM                                     FIX HEADER FOR DUPLICATE2640 IF POS(D$,"S",27)<>27 THEN 26702650 PRINT "SECRET -- CAN'T TRANSFER"2660 GO TO 31702670 IF K6 THEN 27702680 IF NOT(J5) THEN 27202690 A$=STR(A6)2700 D$=REP("        ",1,8)2710 D$=REP(A$,1,LEN(A$))2720 IF J0=0 THEN 27702730 A4=-INT(-A1(A0)/((2-K4)*128))2740 A$=STR(A4 MAX 3)2750 D$=REP("        ",35,8)2760 D$=REP(A$,35,LEN(A$))2770 K9=12780 IF POS(D$,"P",17)=17 THEN 28002790 K9=122800 IF B$="A" THEN 28502810 IF K9=12 THEN 29302820 PRINT "BINARY PROGRAM"2825 E1=12830 GO TO 29702840 REM            DATA TRANSFER -- ASCII & BINARY (NUMERIC & STRING)2850 FIND @J9:A62860 FIND @J8:J12870 PRINT "ASCII"2880 INPUT %J8:A$2890 PRINT @J9:A$2900 IF LEN(A$)<A3 THEN 28802910 PRINT "FATAL ERROR:  ASCII STRING TOO LONG TO INPUT."2920 GO TO 32902930 IF POS(D$,"D",17)=17 THEN 29602940 PRINT "FATAL ERROR:  BAD HEADER:";D$;""2950 GO TO 32902960 PRINT "BINARY DATA"2965 E1=02970 FIND @J9:A62980 FIND @J8:J12990 IF TYP(0)=4 THEN 30302995 IF E1 THEN 30903000 READ @J8:A43010 WRITE @J9:A43020 GO TO 29903030 READ @J8:A$3040 WRITE @J9:A$3050 IF LEN(A$)<A3 THEN 29903060 PRINT "FATAL ERROR:  BINARY STRING TOO LONG TO READ."3070 GO TO 32903080 REM                          ALL DATA TRANSFERRED--HEADER NOW???3090 IF K3 OR K6 THEN 31703100 PRINT @J9,0:K4,K5,1,K73110 FIND @J9:A63120 PRINT @J9:D$;C$;""3130 PRINT @J9,2:3140 PRINT @J9,0:K4,K5,0,K73150 GO TO 31703160 PRINT "NEW"3170 NEXT J13180 FIND @J9:03190 J6=13200 PRINT "TRANSFER DONE"3210 PRINT "DO YOU WANT TO MAKE ANOTHER COPY OF THE MASTER: ";3220 INPUT B$3230 IF B$="N" THEN 33203240 IF B$<>"Y" THEN 32103250 PRINT "	      (MAKE SURE IT IS NOT ON SAFE!)"3260 PRINT "	PUT A NEW TAPE IN THE 4924 AND PRESS ""RETURN"":";3270 INPUT B$3280 GO TO 17403290 PRINT @J8,0:K1,K2,K33300 PRINT @J9,0:K4,K5,K6,K73310 FIND @J9:03320 END 3330 POLL K8,K9;J93340 INPUT @J9,30:K93350 PRINT @J9,0:K4,K5,K6,K73360 IF K9<>12 THEN 33903370 PRINT "FATAL ERROR:  DUPLICATE FILE IS TOO SMALL."3380 GO TO 32903390 IF K9<>10 THEN 34203400 PRINT "FATAL ERROR:  VERIFY (READ AFTER WRITE) ERROR"3410 GO TO 32903420 PRI "FATAL ERROR:  MAG TAPE ERROR #";K9;"  (SEE 4924 REFN. MAN";3430 PRINT "UAL)"3440 GO TO 3290TOO SMALL."3380 GO TO 32903390 IF K9<>10 THEN 34203400 PRINT "FATAL ERROR:  VERIFY (READ AFTER WRITE) ERROR"3410 GO TO 32903420 PRI "FATAL ERROR 6      NEW                       33                                                                                                                                                                                                                           6      NEW                       33                                                                                                                                                                                                                           6      NEW                       33                                                                                                                                                                                                                           6      NEW                       33                                                                                                                                                                                                                           7      ASCII   PROG /LIST-F.FD/   30                                                                                                                                                                                                                         1000 REM *1010 REM *  "FORMATTED" LISTING PROGRAM #11020 REM *           DAN TAYLOR, GCS SOFT. ENGR., DEC 19751030 REM *1040 PRINT """FORMATTED"" LISTING PROGRAM -- ";1050 PRINT "FOR A PRINTER WITH A ""FORM FEED""."1060 PRINT "	(EG. ""TEK 4641"")"1070 INIT 1080 REM *1090 PRINT "INITIALIZATION DEPENDENT UPON YOUR PRINTER:"1100 LIST 1110,12701110 DATA 41,12,0,601120 READ S3,S4,S5,S61130 PRINT @S3,15:01140 REM *            S3 = GPIB PRIMARY ADDRESS OF THE PRINTER.1150 REM *            S4 = SECONDARY ADDRESS FOR THE PRINTER.1160 REM *            S5 = NUMBER OF SECONDS TO PAUSE AT THE BOTTOM1170 REM *                 OF EACH PAGE BEFORE PRINTING F$.1180 REM *            S6 = NUMBER OF LINES TO PRINT PER PAGE.1190 REM *            F$ = CHARACTER STRING WHICH WILL CAUSE YOUR1200 REM *                 PRINTER TO "FORM FEED" TO THE NEXT PAGE.1210 REM *            S$ = STRING WHICH WILL CAUSE YOUR PRINTER1220 REM *                 TO "CARRIAGE RETURN & LINE FEED" 1 LINE.1230 DIM F$(2),S$(2)1240 F$=CHR(12)1250 F$=" "&F$1260 S$=CHR(13)1270 S$=" "&S$1280 REM *1290 PRINT "INSERT YOUR PROGRAM TAPE WITH THE FILES TO BE LISTED."1300 PRINT "START WITH TAPE FILE NUMBER = ";1310 INPUT S81320 PRINT "  END WITH TAPE FILE NUMBER = ";1330 INPUT S91340 PRINT "HOW MANY SPACES DO YOU WANT EACH ""FOR--NEXT"" LOOP ";1350 PRINT "INDENTED = ";1360 INPUT S01370 S0=INT(ABS(S0))1380 DATA 0,1,2,3,4,32,64,33,91390 READ W0,W1,W2,W3,W4,T2,T6,T8,T91400 DIM B$(W2),I$(130),L$(210),R$(W1),T$(S0 MAX W1),Z$(3)1410 DIM M$(75),X$(5000),Y$(T9),W$(T9)1420 PRINT "DO YOU WANT BRANCH POINTS INDICATED: ";1430 INPUT R$1440 T5=W01450 IF R$="Y" THEN 14801460 IF R$<>"N" THEN 14201470 T5=W11480 PRINT "DO YOU WANT SEQUENCES OF ""REM"" STATEMENTS SEPARATED"1490 PRINT "FROM THE REST OF THE CODE BY A BLANK LINE          : ";1500 INPUT R$1510 T7=W01520 IF R$="Y" THEN 15501530 IF R$<>"N" THEN 14801540 T7=W11550 T$=""1560 IF S0=W0 THEN 16001570 FOR J=W1 TO S01580 T$=T$&" "1590 NEXT J1600 B$=CHR(8)1610 B$=B$&"_"1620 W$=""1630 X$=""1640 Y$=""1650 FOR J=W1 TO T91660 Y$=Y$&" "1670 NEXT J1680 J3=S6-W21690 T9=T9-W21700 PAGE 1710 GOSUB 32201720 FOR J9=S8 TO S91730 PRINT "FILE # ";J9;""1740 IF T5 THEN 22001750 REM                      ***** PASS 1 -- BUILD TABLE *****1760 X$=""1770 ON EOF (0) THEN 22001780 FIND J91790 IF TYP(0)<>2 THEN 31801800 INPUT @T8:L$1810 REM           ***** FIND KEYWORD *****1820 S1=POS(L$," ",W2)+W11830 S2=POS(L$," ",S1)1840 IF NOT(S2) THEN 18001850 M$=SEG(L$,S1,S2-S1)1860 J=POS("GOIFONGOSUB",M$,W1)1870 GO TO J OF 1890,1800,1920,1800,1920,1800,18901880 GO TO 18001890 S1=POS(L$,"OF",S2)1900 IF S1 THEN 20301910 REM           ***** IF,ON OR SIMPLE GOTO/GOSUB *****1920 S1=S21930 S2=POS(L$," ",S1+W1)1940 IF S2 THEN 19201950 M$=SEG(L$,S1,LEN(L$)+W1-S1)1960 M$=" "&M$1970 M$=M$&" "1980 IF J<W4 THEN 20001990 M$=REP("-",W1,W1)2000 X$=REP(M$,W1+LEN(X$),W0)2010 GO TO 18002020 REM           ***** GOTO/GOSUB OF ... *****2030 S1=S1+W32040 S2=POS(L$,",",S1)2050 IF S2 THEN 21102060 REM           ***** PROCESS LAST NUMBER *****2070 M$=SEG(L$,S1,W1+LEN(L$)-S1)2080 M$="  "&M$2090 GO TO 19702100 REM           ***** PROCESS NEXT NUMBER *****2110 M$=SEG(L$,S1,S2-S1)2120 M$="  "&M$2130 M$=M$&" "2140 S1=S2+W12150 IF J<W4 THEN 21702160 M$=REP("-",W1,W1)2170 X$=REP(M$,W1+LEN(X$),W0)2180 GO TO 20402190 REM                 ***** PASS 2 - PRINT THE LISTING *****2200 I$=""2210 S1=W12220 S2=W22230 ON EOF (0) THEN 30302240 FIND J92250 PRINT @S3,S4:"                                                 ";2260 PRINT @S3,S4:" FILE # ";J9;S$;2270 PRINT @S3,S4:S$;2280 INPUT @T8:L$2290 IF L$="" THEN 22802300 IF POS(L$,"REM",W1)=W0 AND POS(L$,"""",W1)=W0 THEN 23802310 FOR I=LEN(L$) TO W1 STEP -W12320 Z$=SEG(L$,I,W1)2330 IF Z$=>" " THEN 23702340 Z$=CHR(ASC(Z$)+T6)2350 Z$=Z$&B$2360 L$=REP(Z$,I,W1)2370 NEXT I2380 I=POS(L$," ",W2)+W12390 IF T5 THEN 27802400 J1=W02410 J2=W02420 W$=Y$2430 M$=SEG(L$,W1,I-W1)2440 M$=" "&M$2450 J=W12460 J=POS(X$,M$,J)2470 IF NOT(J) THEN 25602480 REM            ***** M$ FOUND IN X$ *****2490 J1=W1+J12500 IF J2 THEN 25302510 Z$=SEG(X$,J-W1,W1)2520 J2=Z$<>" "2530 X$=REP("",J-W1,W1+LEN(M$))2540 GO TO 24602550 REM            ***** ALL LINES IN X$ PROCESSED *****2560 IF NOT(J1) THEN 27802570 REM            ***** SET UP W$ *****2580 M$=STR(J1)2590 M$=REP("",W1,W1)2600 Z$=CHR(43.25+J2+J2)2610 W$=Z$&Z$2620 W$=W$&Z$2630 W$=W$&M$2640 FOR J=W4+LEN(M$) TO T92650 W$=W$&Z$2660 NEXT J2670 W$=W$&"  "2680 REM              ***** SUBR. BRANCH POINT? *****2690 IF NOT(J2) THEN 27802700 IF S2<J3 THEN 27402710 GOSUB 32202720 S2=W12730 GO TO 27602740 S2=S2+W22750 PRINT @S3,S4:S$;2760 PRINT @S3,S4:"--------------------------------------------------";2770 PRINT @S3,S4:"----------------------------------------------";S$;2780 IF T7 THEN 28702790 J=POS(L$,"REM",I)=I2800 IF J<>S1 THEN 28502810 PRINT @S3,S4:S$;2820 S2=W1+S22830 IF S2<S6 THEN 28502840 GOSUB 32202850 S1=W1-J2860 IF J THEN 29202870 J=POS(L$,"NEXT",I)=I2880 IF NOT(J) THEN 29202890 IF I$="" THEN 29202900 I$=REP("",W1,S0)2910 REM                      ***** INSERT BLANKS FOR INDENTING? *****2920 IF NOT(LEN(I$)) THEN 29402930 L$=REP(I$,I,W0)2940 PRINT @S3,S4:W$;L$;S$;2950 S2=W1+S22960 IF S2<S6 THEN 29802970 GOSUB 32202980 IF J THEN 22802990 IF POS(L$,"FOR",I)<>I+LEN(I$) THEN 22803000 I$=REP(T$,W1,W0)3010 GO TO 22803020 REM                      ***** FILE #J9 IS DONE *****3030 IF NOT(LEN(X$)) THEN 31603040 IF S2<S6-6 THEN 30603050 GOSUB 32203060 S2=W13070 PRINT @S3,S4:S$;" THE FOLLOWING LINE NUMBERS ARE BRANCHED TO BUT";3080 PRINT @S3,S4:" DO NOT EXIST IN THIS TAPE FILE ( # ";J9;" )";S$;3090 PRINT @S3,S4:" A ""-"" BEFORE THE LINE NUMBER INDICATES IT IS B";3100 PRINT @S3,S4:"RANCHED TO AS A SUBROUTINE (VIA A ""GOSUB"" OR ";3110 PRINT @S3,S4:"""ON"")";S$;S$;3120 L$=SEG(X$,1,120)3130 PRINT @S3,S4:L$;S$;3140 X$=REP("",1,120 MIN LEN(X$))3150 IF X$<>"" THEN 31203160 IF S2=W0 THEN 31803170 GOSUB 32203180 NEXT J93190 PRINT "	DONE"3200 END 3210 REM                      ***** PAUSE AND FORM FEED *****3220 FOR T4=W1 TO S5*2253230 NEXT T43240 PRINT @S3,S4:F$;3250 S2=W03260 RETURN F X$<>"" THEN 31203160 IF S2=W0 THEN 31803170 GOSUB 32203180 NEXT J93190 PRINT "	DONE"3200 END  7      NEW                       30                                                                                                                                                                                                                           7      NEW                       30                                                                                                                                                                                                                           7      NEW                       30                                                                                                                                                                                                                           7      NEW                       30                                                                                                                                                                                                                           8      ASCII   PROG /  "  NO F/   20                                                                                                                                                                                                                         1000 REM *1010 REM *  "FORMATTED" LISTING PROGRAM #21020 REM *           DAN TAYLOR, GCS SOFT. ENGR., DEC 19751030 REM *1040 PRINT """FORMATTED"" LISTING PROGRAM -- ";1050 PRINT "FOR A PRINTER WITHOUT A ""FORM FEED""."1060 INIT 1070 REM *1080 PRINT "INITIALIZATION DEPENDENT UPON YOUR PRINTER:"1090 LIST 1100,12201100 DATA 41,12,66,60,10001110 READ S3,S4,S5,S6,S71120 REM *            S3 = GPIB PRIMARY ADDRESS OF THE PRINTER.1130 REM *            S4 = SECONDARY ADDRESS FOR THE PRINTER.1140 REM *            S5 = TOTAL NUMBER OF PRINTABLE LINES PER PAGE.1150 REM *            S6 = NUMBER OF LINES TO PRINT PER PAGE <= S5.1160 REM *            S7 = NUMBER OF CHARACTERS YOUR PRINTER BUFFER1170 REM *                 CAN HOLD.1180 REM *            S$ = STRING WHICH WILL CAUSE YOUR PRINTER1190 REM *                 TO "CARRIAGE RETURN & LINE FEED" ONE LINE.1200 DIM S$(2)1210 S$=CHR(13)1220 S$=" "&S$1230 REM *1240 PRINT "INSERT YOUR PROGRAM TAPE WITH THE FILES TO BE LISTED."1250 PRINT "START WITH TAPE FILE NUMBER = ";1260 INPUT S81270 PRINT "  END WITH TAPE FILE NUMBER = ";1280 INPUT S91290 PRINT "HOW MANY SPACES DO YOU WANT EACH ""FOR--NEXT"" LOOP ";1300 PRINT "INDENTED = ";1310 INPUT S01320 S0=INT(ABS(S0))1330 DATA 0,1,2,32,641340 READ W0,W1,W2,T2,T61350 T3=S5-S61360 DIM A$(S7+500),B$(W2),I$(130),L$(210),R$(W1),T$(S0 MAX W1)1370 DIM U$(T3*LEN(S$) MAX W1),Z$(3)1380 PRINT "DO YOU WANT SEQUENCES OF ""REM"" STATEMENTS SEPARATED"1390 PRINT "FROM THE REST OF THE CODE BY A BLANK LINE          : ";1400 INPUT R$1410 T7=W01420 IF R$="Y" THEN 14501430 IF R$<>"N" THEN 13801440 T7=W11450 A$=""1460 T$=""1470 IF S0=W0 THEN 15101480 FOR J=W1 TO S01490 T$=T$&" "1500 NEXT J1510 I$=""1520 U$=""1530 IF T3=W0 THEN 15701540 FOR I=W1 TO T31550 U$=U$&S$1560 NEXT I1570 B$=CHR(8)1580 B$=B$&"_"1590 PAGE 1600 FOR J9=S8 TO S91610 REM                 ***** PREPARE FOR NEXT TAPE FILE *****1620 I$=""1630 S1=W11640 S2=W01650 ON EOF (0) THEN 21101660 PRINT "FILE #";J9;""1670 FIND J91680 IF TYP(0)<>2 THEN 21701690 IF LEN(A$)<S7 THEN 17201700 PRINT @S3,S4:A$;1710 A$=""1720 INPUT @33:L$1730 IF L$="" THEN 17201740 IF POS(L$,"REM",W1)=W0 AND POS(L$,"""",W1)=W0 THEN 18201750 FOR I=LEN(L$) TO W1 STEP -W11760 Z$=SEG(L$,I,W1)1770 IF Z$=>" " THEN 18101780 Z$=CHR(ASC(Z$)+T6)1790 Z$=Z$&B$1800 L$=REP(Z$,I,W1)1810 NEXT I1820 L$=REP(S$,LEN(L$)+W1,W0)1830 I=POS(L$," ",W2)+W11840 IF T7 THEN 19401850 J=POS(L$,"REM",I)=I1860 IF J<>S1 THEN 19201870 A$=REP(S$,W1+LEN(A$),W0)1880 S2=W1+S21890 IF S2<S6 THEN 19201900 A$=REP(U$,W1+LEN(A$),W0)1910 S2=W01920 S1=W1-J1930 IF J THEN 19801940 J=POS(L$,"NEXT",I)=I1950 IF NOT(J) THEN 19801960 I$=REP("",W1,S0)1970 REM                      ***** INSERT BLANKS FOR INDENTING? *****1980 IF NOT(LEN(I$)) THEN 20001990 L$=REP(I$,I,W0)2000 A$=REP(L$,W1+LEN(A$),W0)2010 S2=W1+S22020 IF S2<S6 THEN 20502030 A$=REP(U$,W1+LEN(A$),W0)2040 S2=W02050 IF J THEN 16902060 IF POS(L$,"FOR",I)<>I+LEN(I$) THEN 16902070 I$=REP(T$,W1,W0)2080 GO TO 16902090 REM                      ***** FILE #J9 IS DONE *****2100 IF LEN(A$)=W0 THEN 21302110 PRINT @S3,S4:A$;2120 REM                      ***** FORM FEED TWICE *****2130 A$=""2140 FOR I=W1 TO S5+S5-S22150 A$=REP(S$,W1+LEN(A$),W0)2160 NEXT I2170 NEXT J92180 PRINT @S3,S4:A$;2190 PRINT "	DONE"2200 END IF LEN(A$)=W0 THEN 21302110 PRINT @S3,S4:A$;2120 REM                      ***** FORM FEED TWICE *****2130 A$=""2140 FOR I=W1 TO S5+S5-S22150 A$=REP(S$,W1+LEN(A$),W0)2160 NEXT I2170 N 8      NEW                       20                                                                                                                                                                                                                           8      NEW                       20                                                                                                                                                                                                                           8      NEW                       20                                                                                                                                                                                                                           8      NEW                       20                                                                                                                                                                                                                           8      NEW                       20                                                                                                                                                                                                                           9      ASCII   PROG /NAME FILE/   14                                                                                                                                                                                                                       1000 REM *  NAMING TAPE HEADERS1010 REM *         DAN TAYLOR, GCS SOFT. ENGR., JULY 19761020 PRINT "	** NAMING TAPE HEADERS **"1030 INIT 1040 DATA 0,0,01050 READ S1,S2,S31060 DATA 21,13,91070 READ J1,J2,J31080 J4=27+1-J1-21090 PRINT "INSERT YOUR PROGRAM TAPE."1100 PRINT "START WITH TAPE FILE NUMBER = ";1110 INPUT S81120 PRINT "  END WITH TAPE FILE NUMBER = ";1130 INPUT S91140 DIM B$(300),C$(1),D$(J2+10),I$(J2)1150 S0=MEMORY-3001160 DIM A$(S0+100)1170 DATA 0,1,2,331180 READ W0,W1,W2,S41190 PRINT "NOTE:  YOU MAY ENTER UP TO ";J3;" CHARACTERS FOR THE ";1200 PRINT "FILE NAME.       HOWEVER, THERE ARE TWO RESTRICTIONS:"1210 PRINT "    1  NONE OF THE CHARACTERS 0,1,...,9 ARE ALLOWED."1220 PRINT "    2  CHARACTER #";J4;" MAY NOT BE AN ""S""."1230 PRINT 1240 C$=CHR(13)1250 FOR S7=S8 TO S91260 PRINT USING "FA,3D,FA,S":"FILE   #";S7;",    ENTER NAME = "1270 PRINT USING """/"",9X,""/"",30X,S":1280 INPUT I$1290 IF I$="" THEN 15801300 I$=SEG(I$,W1,J3)1310 D$=I$&",-1E288"1320 IF VAL(D$)=-1.0E+288 THEN 13501330 PRINT "ERROR:  NO NUMERIC CHARACTERS (0,1,...,9) ALLOWED."1340 GO TO 12601350 D$=SEG(I$,J4,W1)1360 IF D$<>"S" THEN 13901370 PRINT "ERROR:  CHARACTER #";J4;" MAY NOT BE AN ""S""."1380 GO TO 12601390 IF LEN(I$)=>J3 THEN 14301400 FOR S5=LEN(I$)+W1 TO J31410 I$=I$&" "1420 NEXT S51430 I$=" /"&I$1440 I$=I$&"/ "1450 PRINT @S4,W0:S1,S2,W11460 FIND @S4:S71470 INPUT @S4:A$1480 IF VAL(A$)=S7 AND LEN(A$)=42 AND POS(A$,"S",27)<>27 THEN 15301490 PRINT "FATAL ERROR:  BAD HEADER";A$1500 PRINT @S4,W0:S1,S2,S31510 END 1520 REM*  INSERT FILE NAME AND PUT BACK ON TAPE.1530 A$=REP(I$,J1,LEN(I$))1540 FIND @S4:S71550 PRINT @S4:A$;C$;""1560 FIND @S4:S71570 PRINT @S4,W0:S1,S2,S31580 NEXT S71590 PRINT "DONE"1600 END ";A$1500 PRINT @S4,W0:S1,S2,S31510 END 1520 REM*  INSERT FILE NAME AND PUT BACK ON TAPE.1530 A$=REP(I$,J1,LEN(I$))1540 FIND @S4:S71550 PRINT @S4:A$;C$;""1560 FIND @S4:S71570 PRINT @S4,W0:S1,S2,S31580 NEXT S71590 PRIN 9      NEW                       14                                                                                                                                                                                                                           9      NEW                       14                                                                                                                                                                                                                           9      NEW                       14                                                                                                                                                                                                                           9      NEW                       14                                                                                                                                                                                                                           9      NEW                       14                                                                                                                                                                                                                           10     ASCII   PROGRAM   SECRET   12     TUT TUT TUT -- THIS IS A SECRET FILE                                                                                                                                                                            11     ASCII   PROG /TLIST EXT/   15                                                                                                                                                                                                                         1000 PRINT "	** TLIST EXTENSION **"1010 PRINT "THIS PROGRAM WILL TELL YOU THE NUMBER OFBYTES USED";1020 PRINT " IN TAPE FILES YOU SELECT."1030 INIT 1040 PRINT "INSERT YOUR TAPE!"1050 PRINT "START WITH TAPE FILE NUMBER = ";1060 INPUT S81070 PRINT "  END WITH TAPE FILE NUMBER = ";1080 INPUT S91090 S7=MEMORY-1001100 DIM A$(S7)1110 PRINT "FILE #    TYPE 	# STRINGS        NUMBER BYTES";1120 PRINT "	AVERAGE STRING"1130 PRINT "	(# BIN #'S)      MARKED    USED	    LENGTH"1140 FOR J9=S8 TO S91150 S3=01160 S4=01170 S5=01180 S6=01190 PRINT USING "2L,3D,6X,S":J91200 REM                    CHECK HEADER FOR PROPER FILE1210 PRINT @33,0:0,0,11220 FIND J91230 PRINT @33,0:0,0,01240 INPUT @33:A$1250 IF VAL(A$)=J9 THEN 13401260 FIND 01270 PRINT @33,0:0,0,11280 FIND J91290 PRINT @33,0:0,0,01300 INPUT @33:A$1310 IF VAL(A$)=J9 THEN 13401320 PRINT "MAG TAPE HEADER ERROR IN FILE #";J91330 END 1340 IF POS(A$,"LAST",9)<>9 THEN 13701350 PRINT "LAST"1360 GO TO 18601370 A$=REP("",1,10)1380 PRINT "		";256*VAL(A$);""1390 FIND J91400 PRINT "         ";1410 GO TO TYP(0) OF 1420,1610,1450,14501420 PRINT "NEW"1430 GO TO 18501440 REM                  BINARY FILE:1450 PRINT "BINARY";1460 ON EOF (0) THEN 15601470 IF TYP(0)=4 THEN 15101480 READ @33:S21490 S3=1+S31500 GO TO 14701510 READ @33:A$1520 S4=1+S41530 S6=S6+LEN(A$)1540 S5=S5+(LEN(A$)=S7)1550 GO TO 14701560 S1=S6+S4+S4+10*S31570 PRINT "	  (";S3;")"1580 S2=01590 GO TO 17601600 REM                     ASCII FILE1610 ON EOF (0) THEN 16901620 PRINT "ASCII";1630 A$=""1640 INPUT @33:A$1650 S4=1+S41660 S6=S6+LEN(A$)1670 S5=S5+(LEN(A$)=S7)1680 GO TO 16301690 IF A$="" THEN 17301700 S4=S4+11710 S6=S6+LEN(A$)1720 S5=S5+(LEN(A$)=S7)1730 S1=S6+S41740 S2=11750 REM                    PRINT RESULTS FOR ASCII & BINARY1760 PRINT "	   ";S4;""1770 PRINT "		        ";S1;""1780 PRINT "			     ";INT(10*(S6/(S4 MAX 1))+0.5)/10;""1790 IF NOT(S5) THEN 18301800 PRINT "		               (MIN)		";S5;" STRINGS WERE TOO";1810 PRINT " LONG TO BE		READ IN (EACH HAD LENGTH >= ";S7;")"1820 GO TO 18501830 IF S2 THEN 18501840 PRINT 1850 NEXT J91860 PRINT "DONE"1870 DELETE A$1880 END 6=S6+LEN(A$)1720 S5=S5+(LEN(A$)=S7)1730 S1=S6+S4 11     NEW                       15                                                                                                                                                                                                                           11     NEW                       15                                                                                                                                                                                                                           11     NEW                       15                                                                                                                                                                                                                           11     NEW                       15                                                                                                                                                                                                                           11     NEW                       15                                                                                                                                                                                                                           12     ASCII   PROGRAM   SECRET   13     TUT TUT TUT -- THIS IS A SECRET FILE                                                                                                                                                                            13     ASCII   PROG /STRN SORT/   13                                                                                                                                                                                                                         1000 REM  *----------------------------*ALPHABETIC STRING SORT*------*1010 REM  *-------------------------------------*INPUT SECTION*------*1020 PRINT "	** ALPHABETIC STRING SORT **"1030 INIT 1040 PRINT "ENTER THE LENGTH OF THE LONGEST ITEM (UP TO 72 CHARS)  = ";1050 INPUT J11060 J1=INT(J1)1070 IF J1>72 OR J1<1 THEN 10401080 PRINT "IF YOU ENTER AN ITEM WITH MORE THAN ";J1;" CHARACTERS ";1090 PRINT "THEN THE	BELL WILL RING AND THE EXTRA CHARACTERS WILL ";1100 PRINT "BE IGNORED."1110 J7=J1+11120 DIM B$(J7),C$(1),D$(J1),E$(J1),F$(J1)1130 J2=MEMORY-2001140 J6=J2-J71150 PRINT "THERE IS ROOM FOR UP TO ";INT(J2/J7);" ITEMS."1160 DIM A$(J2)1170 A$=""1180 E$=""1190 FOR J=1 TO J11200 E$=E$&" "1210 NEXT J1220 C$=CHR(31)1230 PRINT "ENTER THE ITEMS TO BE ALPHABETIZED, ONE PER LINE: "1240 PRINT "(PRESS ""RETURN"" WITH NO ENTRY AFTER THE LAST ITEM IS ";1250 PRINT "ENTERED.)"1260 J3=01270 INPUT B$1280 IF B$="" THEN 14101290 IF LEN(B$)<J7 THEN 13201300 PRINT "";1310 B$=SEG(B$,1,J1)1320 J3=J3+11330 F$=SEG(E$,1,J1-LEN(B$))1340 F$=F$&C$1350 B$=B$&F$1360 A$=REP(B$,1+LEN(A$),0)1370 IF LEN(A$)<J6 THEN 12701380 PRINT 1390 PRINT J3;" ITEMS ENTERED--THE MAXIMUM POSSIBLE WITH YOUR MACHINE."1400 REM  *--------------------------*SORTING (BUBBLE) SECTION*------*1410 PRINT "SORTING THE ITEMS:"1420 J0=J3+11430 IF J0<3 THEN 16001440 J4=01450 B$=SEG(A$,1,J1)1460 J5=11470 FOR J=2 TO J0-11480 J5=J5+J71490 D$=SEG(A$,J5,J1)1500 IF B$<=D$ THEN 15501510 J4=J1520 A$=REP(B$,J5,J1)1530 A$=REP(D$,J5-J7,J1)1540 GO TO 15601550 B$=D$1560 NEXT J1570 J0=J41580 GO TO 14301590 REM  *----------------------------------*PRINTING SECTION*------*1600 PRINT "ALPHABETIZED LIST -- ";J3;" ITEMS"1610 PRINT A$1620 END -----------------*SORTING 13     NEW                       13                                                                                                                                                                                                                           13     NEW                       13                                                                                                                                                                                                                           13     NEW                       13                                                                                                                                                                                                                           13     NEW                       13                                                                                                                                                                                                                           13     NEW                       13                                                                                                                                                                                                                           14     ASCII   PROG /BUBL  "  /   12                                                                                                                                                                                                                         100 REM        ******START OF BUBBLE SORT DRIVER ROUTINE******110 DELETE A120 PRINT "	** BUBBLE SORT **"130 PRINT "THE SORT ALGORITHM ITSELF IS IN A SUBROUTINE STARTING AT";140 PRINT " LINE #1000.	LINES #100-300 ARE AN EXAMPLE OF HOW TO ";150 PRINT "USE THE SUBROUTINE:"160 PRINT "HOW LARGE A RANDOM ARRAY WOULD YOU LIKE FOR A TEST SORT = ";170 INPUT A0180 DIM A(A0)190 FOR I=1 TO A0200 A(I)=INT(10*A0*RND(1)+1)210 NEXT I220 PRINT "	NUMBERS TO BE SORTED",A230 GOSUB 1000240 IF A0<=32 THEN 260250 PAGE 260 PRINT "	SORTED NUMBERS",A270 END 280 REM         ******END OF BUBBLE SORT DRIVER ROUTINE******290 REM300 REM *-----------------------------------------------------------*310 REM1000 REM              ******START OF BUBBLE SORT******1010 REM VARIABLES:1020 REM                  **INPUT**1030 REM     A  - THE LINEAR ARRAY TO BE SORTED INTO1040 REM          INCREASING ORDER1050 REM     A0 - THE NUMBER OF ELEMENTS OF A1060 REM                  **OUTPUT**1070 REM     A  - THE SORTED ARRAY1080 A2=INT(A0)+11090 IF A2<3 THEN 12201100 A3=01110 FOR A1=1 TO A2-21120 REM CHANGE < TO > FOR SORTING INTO DECREASING ORDER1130 IF A(A1)<=A(A1+1) THEN 11901140 A3=A1+11150 REM SWITCH ELEMENTS1160 A4=A(A1)1170 A(A1)=A(A3)1180 A(A3)=A41190 NEXT A11200 A2=A31210 GO TO 10901220 RETURN 1230 REM               ******END OF BUBBLE SORT******NTO1040 REM          INCREASING ORDER1050 REM     A0 - THE NUMBER OF ELEMENTS OF A1060 REM                  **OUTPUT**1070 REM     A  - THE SORTED AR 14     NEW                       12                                                                                                                                                                                                                           14     NEW                       12                                                                                                                                                                                                                           14     NEW                       12                                                                                                                                                                                                                           14     NEW                       12                                                                                                                                                                                                                           14     NEW                       12                                                                                                                                                                                                                           15     ASCII   PROG /QUIK  "  /   14                                                                                                                                                                                                                         100 REM        ******START OF QUICKER SORT DRIVER ROUTINE******110 DELETE A120 PRINT "	** QUICKER SORT **"130 PRINT "THE SORT ALGORITHM ITSELF IS IN A SUBROUTINE STARTING AT";140 PRINT " LINE #1000.	LINES #100-300 ARE AN EXAMPLE OF HOW TO ";150 PRINT "USE THE SUBROUTINE:"160 PRINT "HOW LARGE A RANDOM ARRAY WOULD YOU LIKE FOR A TEST SORT = ";170 INPUT A0180 DIM A(A0)190 FOR I=1 TO A0200 A(I)=INT(10*A0*RND(1)+1)210 NEXT I220 PRINT "	NUMBERS TO BE SORTED",A230 GOSUB 1000240 IF A0<=32 THEN 260250 PAGE 260 PRINT "	SORTED NUMBERS",A270 END 280 REM         ******END OF QUICKER SORT DRIVER ROUTINE******290 REM300 REM *-----------------------------------------------------------*310 REM1000 REM             ******START OF QUICKER SORT******1010 REM VARIABLES:1020 REM               **INPUT**1030 REM     A  - LINEAR ARRAY TO BE SORTED INTO1040 REM          INCREASING ORDER1050 REM     A0 - THE NUMBER OF ELEMENTS IN A1060 REM               **OUTPUT**1070 REM     A  - THE SORTED ARRAY1080 DELETE B31090 DIM B3(24)1100 IF A0<=1 THEN 16101110 B4=01120 B1=11130 B2=A01140 IF B2<=B1 THEN 15601150 A5=01160 IF B2-B1<1 THEN 15101170 IF B2-B1>1 THEN 12301180 IF A(B1)<=A(B2) THEN 15101190 A2=A(B1)1200 A(B1)=A(B2)1210 A(B2)=A21220 GO TO 15101230 A5=11240 B5=INT(0.5*(B1+B2))1250 A3=A(B5)1260 A(B5)=A(B1)1270 B6=B21280 A4=B11290 A4=A4+11300 IF A4>B6 THEN 14101310 IF A(A4)<=A3 THEN 12901320 IF B6<A4 THEN 14101330 IF A(B6)<A3 THEN 13601340 B6=B6-11350 GO TO 13201360 A2=A(A4)1370 A(A4)=A(B6)1380 A(B6)=A21390 B6=B6-11400 GO TO 12901410 A(B1)=A(B6)1420 A(B6)=A31430 IF B6+B6<=B1+B2 THEN 14801440 B7=B11450 B8=B6-11460 B1=B6+11470 GO TO 15101480 B7=B6+11490 B8=B21500 B2=B6-11510 IF A5<=0 THEN 15601520 B4=B4+21530 B3(B4-1)=B71540 B3(B4)=B81550 GO TO 11401560 IF B4<=0 THEN 16101570 B1=B3(B4-1)1580 B2=B3(B4)1590 B4=B4-21600 GO TO 11401610 RETURN 1620 REM              ******END OF QUICKER SORT******(B6)<A3 THEN 13601340 B6=B6-11350 GO TO 13201360 A2=A(A4)137 15     NEW                       14                                                                                                                                                                                                                           15     NEW                       14                                                                                                                                                                                                                           15     NEW                       14                                                                                                                                                                                                                           15     NEW                       14                                                                                                                                                                                                                           15     NEW                       14                                                                                                                                                                                                                           16     ASCII   PROG /MED-UNSOR/   15                                                                                                                                                                                                                         100 REM        ******START OF MEDIAN (UNSORTED) DRIVER ROUTINE******110 DELETE D120 PRINT "	** MEDIAN (UNSORTED) **"130 PRINT "THE MEDIAN ALGORITHM ITSELF IS IN A SUBROUTINE STARTING AT";140 PRINT " LINE #1000.	LINES #100-300 ARE AN EXAMPLE OF HOW TO ";150 PRINT "USE THE SUBROUTINE:"160 PRINT "HOW LARGE A RANDOM ARRAY WOULD YOU LIKE FOR A TEST = ";170 INPUT N180 DIM D(N)190 FOR I=1 TO N200 D(I)=INT(10*N*RND(1)+1)210 NEXT I220 PRINT "	MEDIAN OF THE NUMBERS",D230 GOSUB 1000240 PRINT "	IS EQUAL TO  ";C3250 END 260 REM         ******END OF MEDIAN (UNSORTED) DRIVER ROUTINE******270 REM280 REM *-----------------------------------------------------------*290 REM1000 REM            *******START OF MEDIAN ROUTINE (UNSORTED DATA)*****1010 REM VARIABLES:1020 REM              **INPUT**1030 REM      D  - LINEAR ARRAY WHOSE MEDIAN IS TO BE FOUND1040 REM      N  - THE NUMBER OF ELEMENTS IN D1050 REM              **OUTPUT**1060 REM      C3 - THE MEDIAN OF THE ARRAY D1070 DIM C(10),C2(10)1080 F1=11090 C(1)=N1100 F2=01110 C1=01120 C9=91130 C5=0.5*N1140 C6=01150 GOSUB 15701160 C6=11170 IF C0<=10 THEN 13401180 IF C1=C9 THEN 14301190 C=01200 FOR F7=1 TO N1210 IF D(F7)<C1 OR D(F7)>C9 THEN 12401220 F3=INT(9*(D(F7)-C1)/(C9-C1))+11230 C(F3)=C(F3)+11240 NEXT F71250 F1=01260 F1=F1+11270 IF F2+C(F1)=>C5 THEN 13001280 F2=F2+C(F1)1290 GO TO 12601300 F8=C11310 F9=C91320 GOSUB 15701330 GO TO 11701340 IF C0=1 THEN 14301350 FOR F3=1 TO C0-11360 FOR F4=F3 TO 1 STEP -11370 IF C2(F4)<=C2(F4+1) THEN 14201380 F5=C2(F4)1390 C2(F4)=C2(F4+1)1400 C2(F4+1)=F51410 NEXT F41420 NEXT F31430 IF C5=INT(C5) THEN 14601440 C3=C2(C5-F2)1450 RETURN 1460 IF C5-F2+1>C0 THEN 14901470 C3=0.5*(C2(C5-F2)+C2(C5-F2+1))1480 RETURN 1490 C4=C2(C5-F2)1500 F1=F1+11510 IF C(F1)=0 THEN 15001520 C1=F81530 C9=F91540 GOSUB 15701550 C3=0.5*(C4+C1)1560 RETURN 1570 F6=01580 F7=11590 C0=C(F1)1600 FOR F3=1 TO N1610 IF C6=0 THEN 17601620 IF INT(9*(D(F3)-C1)/(C9-C1))+1<>F1 THEN 16801630 C2(F7-10*INT((F7-1)*0.1+5.0E-13))=D(F3)1640 F7=F7+11650 IF F6=0 THEN 17201660 F4=F4 MIN D(F3)1670 F5=F5 MAX D(F3)1680 NEXT F31690 C1=F41700 C9=F51710 RETURN 1720 F4=D(F3)1730 F5=F41740 F6=11750 GO TO 16801760 F1=INT(D(F3))+11770 GO TO 16200 C4=C2(C5-F2)1 16     NEW                       15                                                                                                                                                                                                                           16     NEW                       15                                                                                                                                                                                                                           16     NEW                       15                                                                                                                                                                                                                           16     NEW                       15                                                                                                                                                                                                                           16     NEW                       15                                                                                                                                                                                                                           17     ASCII   PROG /  "  SORT/   11                                                                                                                                                                                                                         100 REM  ******START OF MEDIAN (WITH SORT) DRIVER ROUTINE******110 DELETE D120 PRINT "	** MEDIAN (WITH SORT) **"130 PRINT "THE MEDIAN ALGORITHM ITSELF IS IN A SUBROUTINE STARTING AT";140 PRINT " LINE #1000.	LINES #100-300 ARE AN EXAMPLE OF HOW TO ";150 PRINT "USE THE SUBROUTINE:"160 PRINT "HOW LARGE A RANDOM ARRAY WOULD YOU LIKE FOR A TEST = ";170 INPUT N180 DIM D(N)190 FOR I=1 TO N200 D(I)=INT(10*N*RND(1)+1)210 NEXT I220 PRINT "	MEDIAN OF THE NUMBERS",D230 GOSUB 1000240 PRINT "	IS EQUAL TO  ";C3250 END 260 REM  ******END OF MEDIAN (WITH SORT) DRIVER ROUTINE******270 REM280 REM *-----------------------------------------------------------*290 REM1000 REM            *******START OF MEDIAN ROUTINE (WITH SORT)*****1010 REM VARIABLES:1020 REM              **INPUT**1030 REM      D  - LINEAR ARRAY WHOSE MEDIAN IS TO BE FOUND1040 REM      N  - THE NUMBER OF ELEMENTS IN D1050 REM              **OUTPUT**1060 REM      C3 - THE MEDIAN OF THE ARRAY D1070 REM      D  - THE SORTED ARRAY1080 FOR F3=1 TO N-11090 FOR F4=F3 TO 1 STEP -11100 IF D(F4)<=D(F4+1) THEN 11501110 F5=D(F4)1120 D(F4)=D(F4+1)1130 D(F4+1)=F51140 NEXT F41150 NEXT F31160 C5=0.5*N1170 IF C5=INT(C5) THEN 12001180 C3=D(C5)1190 RETURN 1200 C3=0.5*(D(C5)+D(C5+1))1210 RETURN            **INPUT**1030 REM      D  - LINEAR ARRAY WHOSE MEDIAN IS TO BE FOUND1040 REM      N  - THE NUMBER OF ELEMENTS IN D1050 REM              **OUTPUT**1060 REM      C3 - THE MEDIAN OF THE ARRAY D1070 REM      D  - THE SORTED ARRAY108 17     NEW                       11                                                                                                                                                                                                                           17     NEW                       11                                                                                                                                                                                                                           17     NEW                       11                                                                                                                                                                                                                           17     NEW                       11                                                                                                                                                                                                                           18     ASCII   PROG /TABLED t /   15                                                                                                                                                                                                                         100 REM         *****EXAMPLE OF THE USE OF THE TABLED t ROUTINES*****110 PRINT "THIS DRIVER PROGRAM SHOWS HOW TO USE THE 3 TABLED t";120 PRINT " SUBROUTINES:"130 LIST 100,270140 PRINT "    DEGREES OF"150 PRINT "     FREEDOM 	     90%	     95%	     99%"160 FOR J=1 TO 40170 S3=J180 GOSUB 1060190 PRINT USING "6X,3D,10X,4D.3D,S":J,T3200 GOSUB 1560210 PRINT USING "10X,4D.3D,S":T3220 GOSUB 2060230 PRINT USING "10X,4D.3D":T3240 NEXT J250 END 260 REM           *****END OF SAMPLE DRIVER*****270 REM1000 REM   *******************************************1010 REM    GIVEN S3 DEGREES OF FREEDOM THIS SUBROUTINE WILL RETURN1020 REM  THE TABLED T VALUE FOR A ONE TAILED TEST OF SIGNIFICANCE1030 REM  LEVEL .95.  THIS VALUE IS USED TO SET 90% CONFIDENCE1040 REM  LIMITS FOR THE MEAN. THE ROUTINE RETURNS T3 AS THE1050 REM  TABLED T.1060 IF S3>4 THEN 10901070 T3=15.016+S3*(-12.1829+S3*(3.8945-0.4135*S3))1080 RETURN 1090 T3=S3/(-0.559925368278+0.60784409253*S3)+6.0E-41100 RETURN 1110 REM  END OF .95 LEVEL ROUTINE.1120 REM   *******************************************1130 REM1500 REM   *******************************************1510 REM    GIVEN S3 DEGREES OF FREEDOM THIS SUBROUTINE WILL RETURN1520 REM  THE TABLED T VALUE FOR A ONE TAILED TEST OF SIGNIFICANCE1530 REM  LEVEL .975.  THIS VALUE IS USED TO SET 95% CONFIDENCE1540 REM  LIMITS FOR THE MEAN. THE ROUTINE RETURNS T3 AS THE1550 REM  TABLED T.1560 IF S3>4 THEN 15901570 T3=34.958+S3*(-31.3655+S3*(10.208-1.0945*S3))1580 RETURN 1590 T3=S3/(-0.6115993191+0.5101102332*S3)+6.0E-41600 RETURN 1610 REM   END OF .975 TABLED T ROUTINE.1620 REM   *******************************************1630 REM2000 REM   *******************************************2010 REM    GIVEN S3 DEGREES OF FREEDOM THIS SUBROUTINE WILL RETURN2020 REM  THE TABLED T VALUE FOR A ONE TAILED TEST OF SIGNIFICANCE2030 REM  LEVEL .995. THIS VALUE IS USED TO SET 99% CONFIDENCE2040 REM  LIMITS FOR THE MEAN. THE ROUTINE RETURNS T3 AS THE2050 REM  TABLED T.2060 IF S3>1 THEN 20902070 T3=63.6572080 RETURN 2090 IF S3>5 THEN 21202100 T3=35.362+S3*(-20.6568+S3*(4.6965-0.36367*S3))2110 RETURN 2120 T3=S3/(-0.715572179161+0.387490270184*S3)+6.0E-42130 RETURN 2140 REM  END OF .995 LEVEL ROUTINE.2150 REM   *******************************************2020 REM  THE TABLED T VALUE FOR A ONE TAILED TEST OF SIGNIFICANCE2030 REM  LEVEL .995. THIS VALUE IS USED TO SET 99% CONFIDENCE2040 REM  LIMITS FOR THE MEAN. THE ROUTINE RETURNS T3 AS THE2050 REM  TABLED T.2060 IF S3>1 THEN 2090 18     NEW                       15                                                                                                                                                                                                                           18     NEW                       15                                                                                                                                                                                                                           18     NEW                       15                                                                                                                                                                                                                           18     NEW                       15                                                                                                                                                                                                                           19     LAST                      3                                                                                                                                                                                                                           